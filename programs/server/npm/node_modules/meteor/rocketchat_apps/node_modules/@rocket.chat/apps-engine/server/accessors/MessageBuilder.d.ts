import { IMessageBuilder } from '@rocket.chat/apps-ts-definition/accessors';
import { IMessage, IMessageAttachment } from '@rocket.chat/apps-ts-definition/messages';
import { RocketChatAssociationModel } from '@rocket.chat/apps-ts-definition/metadata';
import { IRoom } from '@rocket.chat/apps-ts-definition/rooms';
import { IUser } from '@rocket.chat/apps-ts-definition/users';
export declare class MessageBuilder implements IMessageBuilder {
    kind: RocketChatAssociationModel.MESSAGE;
    private msg;
    constructor(message?: IMessage);
    setData(data: IMessage): IMessageBuilder;
    setRoom(room: IRoom): IMessageBuilder;
    getRoom(): IRoom;
    setSender(sender: IUser): IMessageBuilder;
    getSender(): IUser;
    setText(text: string): IMessageBuilder;
    getText(): string;
    setEmojiAvatar(emoji: string): IMessageBuilder;
    getEmojiAvatar(): string;
    setAvatarUrl(avatarUrl: string): IMessageBuilder;
    getAvatarUrl(): string;
    setUsernameAlias(alias: string): IMessageBuilder;
    getUsernameAlias(): string;
    addAttachment(attachment: IMessageAttachment): IMessageBuilder;
    setAttachments(attachments: Array<IMessageAttachment>): IMessageBuilder;
    getAttachments(): Array<IMessageAttachment>;
    replaceAttachment(position: number, attachment: IMessageAttachment): IMessageBuilder;
    removeAttachment(position: number): IMessageBuilder;
    setEditor(user: IUser): IMessageBuilder;
    getEditor(): IUser;
    getMessage(): IMessage;
}

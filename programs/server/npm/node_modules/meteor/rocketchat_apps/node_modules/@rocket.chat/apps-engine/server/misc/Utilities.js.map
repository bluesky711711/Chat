{"version":3,"sources":["../src/server/misc/Utilities.ts"],"names":[],"mappings":";;AAAA,8CAA+C;AAC/C,6BAA6B;AAC7B,yBAAyB;AAIzB;IACW,MAAM,CAAC,SAAS,CAAI,IAAO;QAC9B,OAAO,SAAS,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAC;IAEM,MAAM,CAAC,UAAU,CAAI,IAAS;QACjC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAEpB,MAAM,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,IAAY,EAAE,EAAE;YACtD,2CAA2C;YAC3C,IAAI,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,QAAQ,IAAI,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE;gBAC1J,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;aACpC;QACL,CAAC,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,MAAM,CAAC,kBAAkB,CAAI,IAAO;QACvC,OAAO,SAAS,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;IAC3D,CAAC;IAEM,MAAM,CAAC,+BAA+B,CAAC,UAAkB;QAC5D,OAAO,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,GAAG,KAAK,CAAC;IACrE,CAAC;IAEM,MAAM,CAAC,kBAAkB,CAAC,KAAqC;QAClE,OAAO,mBAAmB,GAAW;YACjC,IAAI,KAAK,CAAC,SAAS,CAAC,+BAA+B,CAAC,GAAG,CAAC,CAAC,EAAE;gBACvD,MAAM,SAAS,GAAG,EAAE,CAAC;gBACrB,MAAM,OAAO,GAAG,EAAE,CAAC,aAAa,CAAC;oBAC7B,OAAO,EAAE,SAAS,CAAC,kBAAkB,CAAC,KAAK,CAAC;oBAC5C,OAAO,EAAE,SAAS;oBAClB,OAAO,EAAE,EAAE;iBACd,CAAC,CAAC;gBAEH,EAAE,CAAC,YAAY,CAAC,KAAK,CAAC,SAAS,CAAC,+BAA+B,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;gBAEzF,OAAO,SAAS,CAAC;aACpB;iBAAM;gBACH,OAAO,OAAO,CAAC,GAAG,CAAC,CAAC;aACvB;QACL,CAAC,CAAC;IACN,CAAC;CACJ;AA5CD,8BA4CC","file":"Utilities.js","sourcesContent":["import cloneDeep = require('lodash.clonedeep');\nimport * as path from 'path';\nimport * as vm from 'vm';\n\nimport { ICompilerFile } from '../compiler';\n\nexport class Utilities {\n    public static deepClone<T>(item: T): T {\n        return cloneDeep(item);\n    }\n\n    public static deepFreeze<T>(item: any): T {\n        Object.freeze(item);\n\n        Object.getOwnPropertyNames(item).forEach((prop: string) => {\n            // tslint:disable-next-line:max-line-length\n            if (item.hasOwnProperty(prop) && item[prop] !== null && (typeof item[prop] === 'object' || typeof item[prop] === 'function') && !Object.isFrozen(item[prop])) {\n                Utilities.deepFreeze(item[prop]);\n            }\n        });\n\n        return item;\n    }\n\n    public static deepCloneAndFreeze<T>(item: T): T {\n        return Utilities.deepFreeze(Utilities.deepClone(item));\n    }\n\n    public static transformModuleForCustomRequire(moduleName: string): string {\n        return path.normalize(moduleName).replace(/\\.\\.\\//g, '') + '.ts';\n    }\n\n    public static buildCustomRequire(files: { [s: string]: ICompilerFile }): (mod: string) => {} {\n        return function _requirer(mod: string): any {\n            if (files[Utilities.transformModuleForCustomRequire(mod)]) {\n                const ourExport = {};\n                const context = vm.createContext({\n                    require: Utilities.buildCustomRequire(files),\n                    exports: ourExport,\n                    process: {},\n                });\n\n                vm.runInContext(files[Utilities.transformModuleForCustomRequire(mod)].compiled, context);\n\n                return ourExport;\n            } else {\n                return require(mod);\n            }\n        };\n    }\n}\n"]}